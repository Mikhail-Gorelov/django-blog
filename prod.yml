version: '3.7'

services:
  blog:
    build:
      context: .
      cache_from:
        - mushroom3/django-blog:${DOCKER_TAG:-latest}
      dockerfile: docker/prod/web/Dockerfile
    image: mushroom3/django-blog:${DOCKER_TAG:-latest}
    volumes:
      - redis_socket:/redis_socket
      - postgres_socket:/postgres_socket
      - ./logs/django:/home/ubuntu/web/logs:delegated
    expose:
      - 8000
    environment:
      - USE_HTTPS=0
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.gunicorn.env
      - docker/prod/env/.data.env
      - docker/prod/env/.email.env
    depends_on: [db, redis]
    restart: always
    networks:
      - microservice_network
      - separated_network
    healthcheck:
      test: curl --fail -s http://localhost:8000$$HEALTH_CHECK_URL || exit 1
      interval: 1m30s
      timeout: 3s
      retries: 3
    extra_hosts:
      - "docker-gateway-host:172.17.0.1"
  celery:
    build:
      context: .
      cache_from:
        - mushroom3/django-blog:${DOCKER_TAG:-latest}
      dockerfile: docker/prod/web/Dockerfile
    image: mushroom3/django-blog:${DOCKER_TAG:-latest}
    entrypoint: ""
    command: celery -A src worker -l info
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.data.env
      - docker/prod/env/.email.env
    depends_on: [redis]
    restart: always
    volumes:
      - redis_socket:/redis_socket
    networks:
      - separated_network
    extra_hosts:
      - "docker-gateway-host:172.17.0.1"
  db:
    build:
      context: .
      cache_from:
        - mushroom3/django-blog-db:${DOCKER_TAG:-latest}
      dockerfile: docker/prod/db/Dockerfile
    image: mushroom3/django-blog-db:${DOCKER_TAG:-latest}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_socket:/postgres_socket
    env_file:
      - docker/prod/env/.db.env
    restart: always
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  redis:
    build:
      context: .
      cache_from:
        - mushroom3/django-blog-redis:${DOCKER_TAG:-latest}
      dockerfile: docker/prod/redis/Dockerfile
    image: mushroom3/django-blog-redis:${DOCKER_TAG:-latest}
    restart: always
    volumes:
      - redis_data:/data
      - redis_socket:/redis_socket
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1m20s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  redis_socket:
  postgres_socket:

networks:
  microservice_network:
    driver: bridge
  separated_network:
    driver: bridge
