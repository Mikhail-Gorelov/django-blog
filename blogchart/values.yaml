# Default values for blogchart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: mushroom3/django-blog
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

celeryContainerName: celery

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.tls.certresolver: le
    traefik.ingress.kubernetes.io/router.tls: "true"
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: blog.mikhail.jollymanager.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
   requests:
     cpu: 400m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 20
  targetMemoryUtilizationPercentage: 40

nodeSelector: { }

tolerations: [ ]

affinity: { }

postgresql:
  enabled: true
  auth:
    username: "develop"
    password: "develop"
    database: "develop"

django:
  enableRendering: "1"
  healthCheckUrl: "/application/health/"
  allowedHosts: "localhost,127.0.0.1,blog"
  debug: "0"
  siteId: "1"
  sqlEngine: "django.db.backends.postgresql"
  backendSite: "http://localhost:8008"
  adminUrl: "admin"
  djangoSettingsModule: "src.settings_dev"
  db:
    postgresHost: ""
    postgresPort: "5432"
  redis:
    redisUrl: "redis://redis:6379"
    redisHost: ""
    redisPort: "6379"
    redisDB: "0"

persistentVolumeClaim:
  storageClassName: ""
  storageSize: 8Gi

flower:
  flowerFullName: "flower"
  flowerImage: "mher/flower"
  flowerTag: "latest"
  flowerPort: "5555"
  pullPolicy: Always

celery:
  args:
    - "celery"
    - "-A"
    - "src"
    - "worker"
    - "-l"
    - "info"
