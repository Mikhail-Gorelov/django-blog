name: Tests

env:
  COVERAGE_THRESHOLD: 75

on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    steps:
      - uses: actions/checkout@v4
      - name: Build project
        run: docker-compose build
      - name: Migration check
        run: docker-compose run --entrypoint="" --no-deps blog python manage.py makemigrations --check
      - name: Tests
        run: docker-compose run --entrypoint="" -u root blog coverage run manage.py test
      - name: Coverage check
        run: docker-compose run --entrypoint="" -u root blog coverage report --fail-under=$COVERAGE_THRESHOLD

  push:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the Docker image
        id: docker_build
        run: docker-compose build --pull

      - name: Push to Docker hub
        run: docker-compose push

  advanced_tests:
    runs-on: ubuntu-latest
    needs: [ push ]
    services:
      blog:
        image: mushroom3/django-blog-dev:latest
        ports:
          - 8008:8008

    steps:
      - uses: actions/checkout@v4
      - name: Run k6 local test
        uses: grafana/k6-action@v0.3.1
        with:
          filename: test/load/blog-load-test-k6.js

  test_isort:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the isort
        run: |
          pip install isort
          cd web
          isort . --check

  test_black:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the black
        id: tests
        run: |
          pip install black
          cd web
          black . --check

  test_flake8:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the black
        run: |
          pip install flake8
          cd web
          flake8 .
