name: 'Tests'

env:
  COVERAGE_THRESHOLD: 75

on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    steps:
      - uses: actions/checkout@v4
      - name: Build project
        run: docker-compose build
      - name: Migration check
        run: docker-compose run --entrypoint="" --no-deps blog python manage.py makemigrations --check
      - name: Tests
        run: docker-compose run --entrypoint="" -u root blog coverage run manage.py test
      - name: Coverage check
        run: docker-compose run --entrypoint="" -u root blog coverage report --fail-under=$COVERAGE_THRESHOLD

  push:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the Docker image
        id: docker_build
        run: docker-compose build --pull

      - name: Push to Docker hub
        run: docker-compose push

      - name: Run docker vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mushroom3/django-blog-dev:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH  '
        continue-on-error: true

  install_test_dependencies:
    needs: [ push ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Cypress install
      uses: cypress-io/github-action@v6
      with:
        runTests: false
        working-directory: test/e2e/
        build: yarn install

    - name: Save build folder
      uses: actions/upload-artifact@v4
      with:
        name: node_modules
        if-no-files-found: error
        path: test/e2e/node_modules

  advanced_tests:
    runs-on: ubuntu-latest
    needs: [ install_test_dependencies ]
    container:
      image: cypress/browsers:latest
      options: >-
        --user 1001
        --add-host=host.docker.internal:host-gateway
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: node_modules
          path: test/e2e/node_modules
      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_BASE_URL: 'http://host.docker.internal:8008'
        with:
          working-directory: test/e2e/
          start: yarn cy:run
          browser: firefox
      - uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: test/e2e/cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        with:
          name: videos
          path: test/e2e/cypress/videos
          if-no-files-found: ignore
      - name: Run k6 tests
        uses: grafana/k6-action@v0.3.1
        with:
          filename: test/load/blog-load-test-k6.js

    services:
      db:
        image: mushroom3/django-blog-db-dev:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 50s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
      redis:
        image: mushroom3/django-blog-redis-dev:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 1m20s
          --health-timeout 5s
          --health-retries 3
      blog:
        image: mushroom3/django-blog-dev:latest
        ports:
          - 8008:8000
        options: >-
          --health-cmd "curl --fail -s http://localhost:8000/application/health/ || exit 1"
          --health-interval 1m30s
          --health-timeout 3s
          --health-retries 3

  test_isort:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the isort
        run: |
          pip install isort
          cd web
          isort . --check

  test_black:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the black
        id: tests
        run: |
          pip install black
          cd web
          black . --check

  test_flake8:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut Repo
        uses: actions/checkout@v4
      - name: Run the black
        run: |
          pip install flake8
          cd web
          flake8 .
